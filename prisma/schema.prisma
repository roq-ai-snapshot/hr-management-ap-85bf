generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model applicant {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  application_date DateTime @db.Timestamp(6)
  position_applied String   @db.VarChar(255)
  resume           String   @db.VarChar(255)
  status           String   @db.VarChar(255)
  user_id          String   @db.Uuid
  company_id       String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  company          company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  address      String?        @db.VarChar(255)
  city         String?        @db.VarChar(255)
  state        String?        @db.VarChar(255)
  zip_code     String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  applicant    applicant[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee     employee[]
  hr_assistant hr_assistant[]
  hr_manager   hr_manager[]
}

model employee {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hire_date  DateTime @db.Timestamp(6)
  job_title  String   @db.VarChar(255)
  department String   @db.VarChar(255)
  salary     Int
  user_id    String   @db.Uuid
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hr_assistant {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date     DateTime  @db.Timestamp(6)
  end_date       DateTime? @db.Timestamp(6)
  assigned_tasks String    @db.VarChar(255)
  user_id        String    @db.Uuid
  company_id     String    @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  company        company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hr_manager {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date        DateTime  @db.Timestamp(6)
  end_date          DateTime? @db.Timestamp(6)
  managed_employees Int
  user_id           String    @db.Uuid
  company_id        String    @db.Uuid
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  company           company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  applicant    applicant[]
  company      company[]
  employee     employee[]
  hr_assistant hr_assistant[]
  hr_manager   hr_manager[]
}
